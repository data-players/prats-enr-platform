version: '3.5'
services:
  fuseki:
    image: stain/jena-fuseki:3.10.0
    container_name: fuseki_prats_enr
    networks:
      - semapps
    volumes:
      - ./data/fuseki:/fuseki
      - ./data/staging:/staging
    ports:
      - "3030:3030"
    environment:
      ADMIN_PASSWORD: "admin"

  fuseki_compact:
    image: semapps/jena-fuseki-webacl:latest
    entrypoint: /docker-compact-entrypoint.sh
    profiles: 
      - compact
    volumes:
      - ./data/fuseki:/fuseki

  middleware:
    build:
      context: ./middleware
      dockerfile: Dockerfile
    container_name: middleware_prats_enr
    networks:
      - semapps
    depends_on:
      - fuseki
    volumes:
      - ./../prats-enr-platform/middleware/:/app
      - ./data/fuseki/backups:/app/fuseki-backups # Needed to backup fuseki datasets
      - ./data/fuseki/databases/localData:/localData
    environment:
      - SEMAPPS_SPARQL_ENDPOINT=http://fuseki_prats_enr:3030/
      - SEMAPPS_MAIN_DATASET=localData
      - SEMAPPS_JENA_USER=admin
      - SEMAPPS_JENA_PASSWORD=admin
      - SEMAPPS_HOME_URL=http://localhost:3000/
      - SEMAPPS_BACKUP_FUSEKI_DATASETS_PATH=/app/fuseki-backups
      # - SEMAPPS_FTP_HOST=dataplayers.exavault.com
      # - SEMAPPS_FTP_PORT=22
      # - SEMAPPS_FTP_USER=dataplayers
      # - SEMAPPS_FTP_PASSWORD=D4t4Pl4yers
      # - SEMAPPS_FTP_PATH=/backup/prats/backups/
    ports:
      - "3000:3000"
    command: bash -c "yarn install && pm2-runtime 'yarn run dev'"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_prats_enr
    networks:
      - semapps
    volumes:
      - ./../prats-enr-platform/frontend:/app
    environment:
      - REACT_APP_MIDDLEWARE_URL=http://localhost:3000/
      - REACT_APP_MAPBOX_ACCESS_TOKEN=pk.eyJ1Ijoic3Jvc3NldDgxIiwiYSI6ImNrbDd0b2VkMzA1dDMycG9iemU4NnpuemsifQ.HvpZ3tnweVHEUYLb0tDvTg
      - PORT=4000
    restart: always
    depends_on:
      - middleware
    ports:
      - "4000:4000"
    command: bash -c "npm rebuild --silent && npm install --silent && npm start"
      
networks:
  semapps:
    name: semapps_network
